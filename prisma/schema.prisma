generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model appointment {
  id                  Int      @id @default(autoincrement())
  status              Int
  title               String
  due_date            DateTime @default(now())
  created_at          DateTime @default(now())
  is_deleted          Boolean  @default(false)
  category_id         Int
  order_id            Int?
  customer_id         Int?
  delivery_invoice_id Int?

  category         invoice_category  @relation(fields: [category_id], references: [id])
  order            order?            @relation(fields: [order_id], references: [id])
  customer         customer?         @relation(fields: [customer_id], references: [id])
  delivery_invoice delivery_invoice? @relation(fields: [delivery_invoice_id], references: [id])

  comments         appointment_comment[]
  taxed_invoice    taxed_invoice?        @relation(fields: [taxed_invoice_id], references: [id])
  taxed_invoice_id Int?

  @@index([order_id])
  @@index([delivery_invoice_id])
  @@index([category_id])
  @@index([customer_id])
  @@index([taxed_invoice_id])
}

model bank_information {
  id     Int     @id @default(autoincrement())
  name   String?
  number String?
  rib    String?
  swift  String?
  ice    String?

  customers customer[]
  employees user[]
  vendors   vendor[]
}

model contact_information {
  id        Int      @id @default(autoincrement())
  email     String?
  phone     String
  address   String?
  honorific String?
  emergency Boolean?

  customers customer[]
  employees user[]
  vendors   vendor[]
}

model cost_modifier {
  id                     Int     @id @default(autoincrement())
  shipping               Float
  discount               Int
  is_discount_percentage Boolean
  tax                    Int

  quotes          quote[]
  orders          order[]
  vendor_invoices vendor_invoice[]
  taxed_invoice   taxed_invoice[]
}

model customer {
  id                     Int      @id @default(autoincrement())
  first_name             String
  last_name              String
  contact_information_id Int
  bank_information_id    Int?
  created_at             DateTime @default(now())
  is_deleted             Boolean  @default(false)

  contact_information contact_information @relation(fields: [contact_information_id], references: [id])
  bank_information    bank_information?   @relation(fields: [bank_information_id], references: [id])

  logs           customer_log[]
  orders         order[]
  quotes         quote[]
  appointment    appointment[]
  comments       customer_comment[]
  taxed_invoices taxed_invoice[]

  @@index([contact_information_id])
  @@index([bank_information_id])
}

model customer_log {
  id          Int      @id @default(autoincrement())
  content     String
  customer_id Int
  created_at  DateTime @default(now())

  customer customer @relation(fields: [customer_id], references: [id])

  @@index([customer_id])
}

model delivery_invoice {
  id         Int      @id @default(autoincrement())
  title      String
  note       String?
  created_at DateTime @default(now())
  status     Int
  order_id   Int      @unique
  // category_id Int?
  is_deleted Boolean  @default(false)

  // category invoice_category? @relation(fields: [category_id], references: [id])
  orders order @relation(fields: [order_id], references: [id])

  materials      delivery_invoice_material[]
  employees      delivery_invoice_user[]
  manual_content manual_delivery_invoice_content[]
  appointments   appointment[]
  comments       delivery_invoice_comment[]

  // @@index([category_id])
  taxed_invoice taxed_invoice[]
}

model delivery_invoice_material {
  id                  Int @id @default(autoincrement())
  quantity            Int
  remaining           Int
  delivery_invoice_id Int
  material_id         Int

  delivery_invoice delivery_invoice @relation(fields: [delivery_invoice_id], references: [id])
  material         material         @relation(fields: [material_id], references: [id])

  @@index([delivery_invoice_id])
  @@index([material_id])
}

model delivery_invoice_user {
  id                  Int @id @default(autoincrement())
  delivery_invoice_id Int
  user_id             Int

  delivery_invoice delivery_invoice @relation(fields: [delivery_invoice_id], references: [id])
  employee         user             @relation(fields: [user_id], references: [id])

  @@index([delivery_invoice_id])
  @@index([user_id])
}

model invoice_category {
  id         Int       @id @default(autoincrement())
  title      String?
  created_at DateTime? @default(now())

  quotes        quote[]
  orders        order[]
  // delivery_invoices delivery_invoice[]
  appointmrnts  appointment[]
  taxed_invoice taxed_invoice[]
}

model location {
  id      Int    @id @default(autoincrement())
  title   String
  address String

  products product[]
  material material[]
}

model manual_delivery_invoice_content {
  id                  Int    @id @default(autoincrement())
  cost                Float  @default(0)
  price               Float
  title               String
  quantity            Int
  delivery_invoice_id Int

  delivery_invoice delivery_invoice @relation(fields: [delivery_invoice_id], references: [id])

  @@index([delivery_invoice_id])
}

model manual_order_content {
  id       Int    @id @default(autoincrement())
  cost     Float  @default(0)
  price    Float
  title    String
  quantity Int
  order_id Int

  order order @relation(fields: [order_id], references: [id])

  @@index([order_id])
}

model manual_package_content {
  id         Int    @id @default(autoincrement())
  cost       Float  @default(0)
  price      Float
  title      String
  quantity   Int
  package_id Int

  package Renamedpackage @relation(fields: [package_id], references: [id])

  @@index([package_id])
}

model manual_quote_content {
  id       Int    @id @default(autoincrement())
  cost     Float  @default(0)
  price    Float
  title    String
  quantity Int
  quote_id Int

  quote quote @relation(fields: [quote_id], references: [id])

  @@index([quote_id])
}

model material {
  id                 Int     @id @default(autoincrement())
  sku                String  @default("")
  price              Float
  title              String
  category_id        Int?
  description        String?
  quantity           Int?
  quantity_threshold Int?
  location_id        Int?
  is_deleted         Boolean @default(false)

  delivery_invoices delivery_invoice_material[]

  location location?           @relation(fields: [location_id], references: [id])
  category inventory_category? @relation(fields: [category_id], references: [id])

  @@index([location_id])
  @@index([category_id])
}

model order {
  id               Int       @id @default(autoincrement())
  ref              String    @unique @default(uuid())
  title            String
  paid             Float     @default(0)
  price            Float
  note             String?
  delivery_address String?
  due_date         DateTime?
  created_at       DateTime  @default(now())
  status           Int
  customer_id      Int
  quote_id         Int?      @unique
  cost_modifier_id Int
  category_id      Int
  is_deleted       Boolean   @default(false)

  category      invoice_category @relation(fields: [category_id], references: [id])
  quote         quote?           @relation(fields: [quote_id], references: [id])
  customer      customer         @relation(fields: [customer_id], references: [id])
  cost_modifier cost_modifier    @relation(fields: [cost_modifier_id], references: [id])

  delivery_invoice delivery_invoice?
  manual_content   manual_order_content[]
  products         order_product[]
  services         order_service[]
  packages         order_package[]
  payments         order_payment[]
  appointments     appointment[]
  comments         order_comment[]
  taxed_invoice    taxed_invoice?

  @@index([category_id])
  @@index([customer_id])
  @@index([cost_modifier_id])
}

model order_package {
  id         Int @id @default(autoincrement())
  cost       Int @default(0)
  price      Int @default(0)
  quantity   Int
  order_id   Int
  package_id Int

  order   order          @relation(fields: [order_id], references: [id])
  package Renamedpackage @relation(fields: [package_id], references: [id])

  @@index([package_id])
  @@index([order_id])
}

model order_payment {
  id         Int      @id @default(autoincrement())
  status     Int
  total      Int
  method     String
  message    String?
  created_at DateTime @default(now())
  paid_at    DateTime @default(now())
  order_id   Int

  order order @relation(fields: [order_id], references: [id])

  @@index([order_id])
}

model order_product {
  id         Int @id @default(autoincrement())
  cost       Int @default(0)
  price      Int @default(0)
  quantity   Int
  order_id   Int
  product_id Int

  order   order   @relation(fields: [order_id], references: [id])
  product product @relation(fields: [product_id], references: [id])

  @@index([order_id])
  @@index([product_id])
}

model order_service {
  id         Int @id @default(autoincrement())
  cost       Int @default(0)
  price      Int @default(0)
  quantity   Int
  order_id   Int
  service_id Int

  order   order   @relation(fields: [order_id], references: [id])
  service service @relation(fields: [service_id], references: [id])

  @@index([order_id])
  @@index([service_id])
}

/// This model has been renamed to 'Renamedpackage', because the original name 'package' is reserved.
model Renamedpackage {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  category_id Int
  price       Float
  created_at  DateTime @default(now())
  is_deleted  Boolean  @default(false)

  manual_content        manual_package_content[]
  products              package_product[]
  services              package_service[]
  quotes                quote_package[]
  orders                order_package[]
  category              inventory_category       @relation(fields: [category_id], references: [id])
  taxed_invoice_package taxed_invoice_package[]

  @@index([category_id])
  @@map("package")
}

model package_product {
  id         Int   @id @default(autoincrement())
  quantity   Int
  product_id Int
  package_id Int
  price      Float @default(0)
  cost       Float @default(0)

  package Renamedpackage @relation(fields: [package_id], references: [id])
  product product        @relation(fields: [product_id], references: [id])

  @@index([package_id])
  @@index([product_id])
}

model package_service {
  id         Int   @id @default(autoincrement())
  quantity   Int   @default(1)
  service_id Int
  package_id Int
  price      Float @default(0)
  cost       Float @default(0)

  package Renamedpackage @relation(fields: [package_id], references: [id])
  service service        @relation(fields: [service_id], references: [id])

  @@index([package_id])
  @@index([service_id])
}

model product {
  id                 Int      @id @default(autoincrement())
  cost               Float
  price              Float
  title              String
  description        String?
  barcode            String?
  sku                String?
  quantity           Int?
  quantity_threshold Int?
  location_id        Int?
  category_id        Int
  vendor_invoice_id  Int?
  created_at         DateTime @default(now())
  is_deleted         Boolean  @default(false)

  location location?          @relation(fields: [location_id], references: [id])
  category inventory_category @relation(fields: [category_id], references: [id])

  packages              package_product[]
  quotes                quote_product[]
  orders                order_product[]
  vendor_invoice        vendor_invoice_product[]
  taxed_invoice_product taxed_invoice_product[]

  @@index([location_id])
  @@index([category_id])
  @@index([vendor_invoice_id])
}

model inventory_category {
  id    Int    @id @default(autoincrement())
  title String

  services  service[]
  packages  Renamedpackage[]
  products  product[]
  materials material[]
}

model quote {
  id               Int      @id @default(autoincrement())
  ref              String   @unique @default(uuid())
  price            Float
  title            String
  note             String?
  created_at       DateTime @default(now())
  due_date         DateTime @default(now())
  address          String   @default("")
  status           Int
  customer_id      Int
  cost_modifier_id Int
  category_id      Int
  is_deleted       Boolean  @default(false)

  customer      customer         @relation(fields: [customer_id], references: [id])
  cost_modifier cost_modifier    @relation(fields: [cost_modifier_id], references: [id])
  category      invoice_category @relation(fields: [category_id], references: [id])

  order          order?
  taxed_invoice  taxed_invoice?
  manual_content manual_quote_content[]
  products       quote_product[]
  services       quote_service[]
  packages       quote_package[]
  comments       quote_comment[]

  @@index([customer_id])
  @@index([cost_modifier_id])
  @@index([category_id])
}

model quote_package {
  id         Int   @id @default(autoincrement())
  quantity   Int
  quote_id   Int
  package_id Int
  price      Float @default(0)
  cost       Float @default(0)

  quote   quote          @relation(fields: [quote_id], references: [id])
  package Renamedpackage @relation(fields: [package_id], references: [id])

  @@index([quote_id])
  @@index([package_id])
}

model quote_product {
  id         Int   @id @default(autoincrement())
  quantity   Int
  quote_id   Int
  product_id Int
  price      Float @default(0)
  cost       Float @default(0)

  quote   quote   @relation(fields: [quote_id], references: [id])
  product product @relation(fields: [product_id], references: [id])

  @@index([quote_id])
  @@index([product_id])
}

model quote_service {
  id         Int   @id @default(autoincrement())
  quantity   Int
  quote_id   Int
  service_id Int
  price      Float @default(0)
  cost       Float @default(0)

  quote   quote   @relation(fields: [quote_id], references: [id])
  service service @relation(fields: [service_id], references: [id])

  @@index([quote_id])
  @@index([service_id])
}

model role {
  id         Int      @id @default(autoincrement())
  title      String
  created_at DateTime @default(now())

  employees user[]
}

model service {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  cost        Float
  price       Float
  created_at  DateTime @default(now())
  is_deleted  Boolean  @default(false)
  category_id Int?

  packages              package_service[]
  quotes                quote_service[]
  orders                order_service[]
  category              inventory_category?     @relation(fields: [category_id], references: [id])
  taxed_invoice_service taxed_invoice_service[]

  @@index([category_id])
}

model user {
  id                     Int       @id @default(autoincrement())
  username               String
  password               String
  first_name             String
  last_name              String
  image_url              String?   @db.MediumText
  created_at             DateTime  @default(now())
  recruited_at           DateTime? @default(now())
  birth_date             DateTime? @default(now())
  salary                 Int?
  status                 Int?
  role_id                Int
  contact_information_id Int
  bank_information_id    Int?
  is_deleted             Boolean   @default(false)

  role                role                @relation(fields: [role_id], references: [id])
  contact_information contact_information @relation(fields: [contact_information_id], references: [id])
  bank_information    bank_information?   @relation(fields: [bank_information_id], references: [id])

  logs                  user_log[]
  delivery_invoices     delivery_invoice_user[]
  payments              user_payment[]
  customer_comment      customer_comment[]
  vendor_comment        vendor_comment[]
  // user_comment        user_comment[]
  order_comment         order_comment[]
  quote_comment         quote_comment[]
  delivery_comment      delivery_invoice_comment[]
  appointment_comment   appointment_comment[]
  taxed_invoice_comment taxed_invoice_comment[]
  dev_contact           dev_contact[]
  contact_messages      contact_message[]

  notifications notification[]

  @@index([role_id])
  @@index([contact_information_id])
  @@index([bank_information_id])
}

model user_log {
  id         Int      @id @default(autoincrement())
  content    String
  user_id    Int
  created_at DateTime @default(now())

  user user @relation(fields: [user_id], references: [id])

  @@index([user_id])
}

model user_payment {
  id          Int      @id @default(autoincrement())
  status      Int
  total       Int
  method      String
  message     String?
  created_at  DateTime @default(now())
  paid_at     DateTime @default(now())
  employee_id Int

  employee user @relation(fields: [employee_id], references: [id])

  @@index([employee_id])
}

model vendor {
  id                     Int      @id @default(autoincrement())
  first_name             String
  last_name              String
  company_name           String
  contact_information_id Int
  bank_information_id    Int?
  created_at             DateTime @default(now())
  is_deleted             Boolean  @default(false)

  contact_information contact_information @relation(fields: [contact_information_id], references: [id])
  bank_information    bank_information?   @relation(fields: [bank_information_id], references: [id])

  logs            vendor_log[]
  vendor_invoices vendor_invoice[]
  comments        vendor_comment[]
  charge          charge[]

  @@index([contact_information_id])
  @@index([bank_information_id])
}

model vendor_log {
  id         Int      @id @default(autoincrement())
  content    String
  vendor_id  Int
  created_at DateTime @default(now())

  vendor vendor @relation(fields: [vendor_id], references: [id])

  @@index([vendor_id])
}

model vendor_invoice {
  id               Int      @id @default(autoincrement())
  title            String
  paid             Float    @default(0)
  price            Float
  note             String?
  created_at       DateTime @default(now())
  status           Int
  vendor_id        Int
  cost_modifier_id Int
  is_deleted       Boolean  @default(false)

  vendor        vendor        @relation(fields: [vendor_id], references: [id])
  cost_modifier cost_modifier @relation(fields: [cost_modifier_id], references: [id])

  products vendor_invoice_product[]
  payments vendor_invoice_payment[]

  @@index([vendor_id])
  @@index([cost_modifier_id])
}

model vendor_invoice_payment {
  id                Int      @id @default(autoincrement())
  status            Int
  total             Int
  method            String
  message           String?
  created_at        DateTime @default(now())
  paid_at           DateTime @default(now())
  vendor_invoice_id Int

  vendor_invoice vendor_invoice @relation(fields: [vendor_invoice_id], references: [id])

  @@index([vendor_invoice_id])
}

model vendor_invoice_product {
  id                Int @id @default(autoincrement())
  product_id        Int
  vendor_invoice_id Int

  quantity  Int
  remaining Int

  product        product        @relation(fields: [product_id], references: [id])
  vendor_invoice vendor_invoice @relation(fields: [vendor_invoice_id], references: [id])

  @@index([product_id])
  @@index([vendor_invoice_id])
}

// notification implementation (not completed)
model customer_comment {
  id              Int      @id @default(autoincrement())
  content         String   @db.VarChar(512)
  metadata        Bytes    @db.Blob
  is_system       Boolean  @default(false)
  created_at      DateTime @default(now())
  customer_id     Int
  commenter_id    Int?
  notification_id Int?

  customer  customer @relation(fields: [customer_id], references: [id])
  commenter user?    @relation(fields: [commenter_id], references: [id])

  notes customer_comment_note[]

  @@index([customer_id])
  @@index([commenter_id])
  @@index([notification_id])
}

model customer_comment_note {
  id              Int      @id @default(autoincrement())
  content         String
  created_at      DateTime @default(now())
  comment_id      Int
  notification_id Int?

  comment customer_comment @relation(fields: [comment_id], references: [id])

  @@index([comment_id])
  @@index([notification_id])
}

model vendor_comment {
  id              Int      @id @default(autoincrement())
  content         String   @db.VarChar(512)
  metadata        Bytes    @db.Blob
  is_system       Boolean  @default(false)
  created_at      DateTime @default(now())
  vendor_id       Int
  notification_id Int?
  commenter_id    Int?

  vendor    vendor @relation(fields: [vendor_id], references: [id])
  commenter user?  @relation(fields: [commenter_id], references: [id])

  notes vendor_comment_note[]

  @@index([vendor_id])
  @@index([commenter_id])
  @@index([notification_id])
}

model vendor_comment_note {
  id              Int      @id @default(autoincrement())
  content         String
  created_at      DateTime @default(now())
  comment_id      Int
  notification_id Int?

  comment vendor_comment @relation(fields: [comment_id], references: [id])

  @@index([comment_id])
  @@index([notification_id])
}

model order_comment {
  id              Int      @id @default(autoincrement())
  content         String   @db.VarChar(512)
  metadata        Bytes    @db.Blob
  is_system       Boolean  @default(false)
  created_at      DateTime @default(now())
  order_id        Int
  commenter_id    Int?
  notification_id Int?

  order              order                @relation(fields: [order_id], references: [id])
  commenter          user?                @relation(fields: [commenter_id], references: [id])
  order_comment_note order_comment_note[]

  @@index([order_id])
  @@index([commenter_id])
  @@index([notification_id])
}

model order_comment_note {
  id              Int      @id @default(autoincrement())
  content         String
  created_at      DateTime @default(now())
  comment_id      Int
  notification_id Int?

  comment order_comment @relation(fields: [comment_id], references: [id])

  @@index([comment_id])
  @@index([notification_id])
}

model quote_comment {
  id              Int      @id @default(autoincrement())
  content         String   @db.VarChar(512)
  metadata        Bytes    @db.Blob
  is_system       Boolean  @default(false)
  created_at      DateTime @default(now())
  quote_id        Int
  notification_id Int?
  commenter_id    Int?

  quote              quote                @relation(fields: [quote_id], references: [id])
  commenter          user?                @relation(fields: [commenter_id], references: [id])
  quote_comment_note quote_comment_note[]

  @@index([quote_id])
  @@index([commenter_id])
  @@index([notification_id])
}

model quote_comment_note {
  id              Int      @id @default(autoincrement())
  content         String
  created_at      DateTime @default(now())
  comment_id      Int
  notification_id Int?

  comment quote_comment @relation(fields: [comment_id], references: [id])

  @@index([comment_id])
  @@index([notification_id])
}

model delivery_invoice_comment {
  id                  Int      @id @default(autoincrement())
  content             String   @db.VarChar(512)
  metadata            Bytes    @db.Blob
  is_system           Boolean  @default(false)
  created_at          DateTime @default(now())
  delivery_invoice_id Int
  notification_id     Int?
  commenter_id        Int?

  delivery_invoice              delivery_invoice                @relation(fields: [delivery_invoice_id], references: [id])
  commenter                     user?                           @relation(fields: [commenter_id], references: [id])
  delivery_invoice_comment_note delivery_invoice_comment_note[]

  @@index([delivery_invoice_id])
  @@index([commenter_id])
  @@index([notification_id])
}

model delivery_invoice_comment_note {
  id              Int      @id @default(autoincrement())
  content         String
  created_at      DateTime @default(now())
  comment_id      Int
  notification_id Int?

  comment delivery_invoice_comment @relation(fields: [comment_id], references: [id])

  @@index([comment_id])
  @@index([notification_id])
}

model appointment_comment {
  id              Int      @id @default(autoincrement())
  content         String   @db.VarChar(512)
  metadata        Bytes    @db.Blob
  is_system       Boolean  @default(false)
  created_at      DateTime @default(now())
  appointment_id  Int
  notification_id Int?
  commenter_id    Int?

  appointment              appointment                @relation(fields: [appointment_id], references: [id])
  commenter                user?                      @relation(fields: [commenter_id], references: [id])
  appointment_comment_note appointment_comment_note[]

  @@index([appointment_id])
  @@index([commenter_id])
  @@index([notification_id])
}

model appointment_comment_note {
  id              Int      @id @default(autoincrement())
  content         String
  created_at      DateTime @default(now())
  comment_id      Int
  notification_id Int?

  comment appointment_comment @relation(fields: [comment_id], references: [id])

  @@index([comment_id])
  @@index([notification_id])
}

model notification {
  id         Int      @id @default(autoincrement())
  type       String   @default("unknown")
  is_read    Boolean  @default(false)
  metadata   Bytes
  created_at DateTime @default(now())

  employee    user @relation(fields: [employee_id], references: [id])
  employee_id Int

  @@index([employee_id])
}

model taxed_invoice {
  id                  Int       @id @default(autoincrement())
  ref                 String    @unique @default(uuid())
  note                String    @default("")
  title               String
  delivery_address    String    @default("")
  paid                Float     @default(0)
  price               Float
  status              Int
  due_date            DateTime?
  created_at          DateTime  @default(now())
  is_deleted          Boolean   @default(false)
  quote_id            Int?      @unique
  order_id            Int?      @unique
  delivery_invoice_id Int?
  category_id         Int
  customer_id         Int
  cost_modifier_id    Int

  quote            quote?            @relation(fields: [quote_id], references: [id])
  order            order?            @relation(fields: [order_id], references: [id])
  delivery_invoice delivery_invoice? @relation(fields: [delivery_invoice_id], references: [id])
  category         invoice_category  @relation(fields: [category_id], references: [id])
  customer         customer          @relation(fields: [customer_id], references: [id])
  cost_modifier    cost_modifier     @relation(fields: [cost_modifier_id], references: [id])

  comments       taxed_invoice_comment[]
  packages       taxed_invoice_package[]
  payments       taxed_invoice_payment[]
  products       taxed_invoice_product[]
  services       taxed_invoice_service[]
  appointments   appointment[]
  manual_content taxed_invoice_manual_content[]

  @@index([category_id])
  @@index([customer_id])
  @@index([cost_modifier_id])
  @@index([delivery_invoice_id])
}

model taxed_invoice_manual_content {
  id               Int    @id @default(autoincrement())
  cost             Float  @default(0)
  price            Float
  title            String
  quantity         Int
  taxed_invoice_id Int

  taxed_invoice taxed_invoice @relation(fields: [taxed_invoice_id], references: [id])

  @@index([taxed_invoice_id])
}

model taxed_invoice_package {
  id               Int @id @default(autoincrement())
  cost             Int @default(0)
  price            Int @default(0)
  quantity         Int
  package_id       Int
  taxed_invoice_id Int

  package       Renamedpackage @relation(fields: [package_id], references: [id])
  taxed_invoice taxed_invoice  @relation(fields: [taxed_invoice_id], references: [id])

  @@index([package_id])
  @@index([taxed_invoice_id])
}

model taxed_invoice_payment {
  id               Int      @id @default(autoincrement())
  status           Int
  total            Int
  method           String
  message          String?
  created_at       DateTime @default(now())
  paid_at          DateTime @default(now())
  taxed_invoice_id Int

  taxed_invoice taxed_invoice @relation(fields: [taxed_invoice_id], references: [id])

  @@index([taxed_invoice_id])
}

model taxed_invoice_product {
  id               Int @id @default(autoincrement())
  cost             Int @default(0)
  price            Int @default(0)
  quantity         Int
  taxed_invoice_id Int
  product_id       Int

  product       product       @relation(fields: [product_id], references: [id])
  taxed_invoice taxed_invoice @relation(fields: [taxed_invoice_id], references: [id])

  @@index([taxed_invoice_id])
  @@index([product_id])
}

model taxed_invoice_service {
  id               Int @id @default(autoincrement())
  cost             Int @default(0)
  price            Int @default(0)
  quantity         Int
  service_id       Int
  taxed_invoice_id Int

  service       service       @relation(fields: [service_id], references: [id])
  taxed_invoice taxed_invoice @relation(fields: [taxed_invoice_id], references: [id])

  @@index([taxed_invoice_id])
  @@index([service_id])
}

model taxed_invoice_comment {
  id               Int      @id @default(autoincrement())
  content          String   @db.VarChar(512)
  metadata         Bytes    @db.Blob
  is_system        Boolean  @default(false)
  created_at       DateTime @default(now())
  commenter_id     Int?
  taxed_invoice_id Int

  commenter     user?         @relation(fields: [commenter_id], references: [id])
  taxed_invoice taxed_invoice @relation(fields: [taxed_invoice_id], references: [id])

  @@index([commenter_id])
  @@index([taxed_invoice_id])
}

model dev_contact {
  id         Int                @id @default(autoincrement())
  subject    String             @default("Subject")
  message    String
  state      dev_contact_states @default(PENDING)
  created_at DateTime           @default(now())
  is_closed  Boolean            @default(false)
  sender_id  Int

  sender user @relation(fields: [sender_id], references: [id])

  messages contact_message[]

  @@index([sender_id])
}

enum dev_contact_states {
  IN_PROGRESS
  PENDING
  RESOLVED
}

model contact_message {
  id         Int      @id @default(autoincrement())
  message    String
  created_at DateTime @default(now())
  sender_id  Int
  contact_id Int

  sender  user        @relation(fields: [sender_id], references: [id])
  contact dev_contact @relation(fields: [contact_id], references: [id])

  @@index([sender_id])
  @@index([contact_id])
}

model charge {
  id         Int          @id @default(autoincrement())
  ref        String       @default(uuid())
  title      String
  price      Float
  type       charge_type
  state      charge_state
  frequency  frequency
  paid_at    DateTime     @default(now())
  created_at DateTime     @default(now())
  vendor_id  Int?

  paid_to  vendor?          @relation(fields: [vendor_id], references: [id])
  payments charge_payment[]

  @@index([vendor_id])
}

model charge_payment {
  id         Int                   @id @default(autoincrement())
  title      String                @default("new Payment")
  amount     Float
  method     charge_payment_method
  charge_id  Int
  paid_at    DateTime              @default(now())
  created_at DateTime              @default(now())

  charge charge @relation(fields: [charge_id], references: [id])

  @@index([charge_id])
}

// model charge_vendor {
//   id         Int      @id @default(autoincrement())
//   vendor_id  Int
//   charge_id  Int
//   created_at DateTime @default(now())

//   vendor vendor @relation(fields: [vendor_id], references: [id])
//   charge charge @relation(fields: [charge_id], references: [id])

//   @@index([vendor_id])
//   @@index([charge_id])
// }

enum charge_state {
  PAID
  NOT_PAID
}

enum charge_type {
  AUTO
  MANUAL
}

enum charge_payment_method {
  CASH
}

enum frequency {
  NONE
  DAILY
  WEEKLY
  BIWEEKLY
  MONTHLY
  TRIMESTER
  SIX_MONTHS
  YEARLY
}
